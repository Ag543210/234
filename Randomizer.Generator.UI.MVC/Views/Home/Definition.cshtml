@using Randomizer.Generator.Core
@model GeneratorModel

@{
    ViewData["Title"] = Model.Name;
}

<h3 class="">@Model.Name</h3>
<h5 class="font-weight-bold border-bottom">@Model.Description</h5>

<a class="font-weight-bold" data-toggle="collapse" href="#details" role="button" aria-expanded="false" aria-controls="details">Details</a>
<div id="details" class="collapse">
    <div class="card card-body">
        <div class="row">
            <div class="col-2">Version:</div>
            <div class="col-10">@Model.Version?.ToString()</div>
        </div>
        @if (!String.IsNullOrWhiteSpace(Model.Author))
        {
            <div class="row">
                <div class="col-2">Author:</div>
                <div class="col-10">@Model.Author</div>
            </div>            
        }
        @if (!String.IsNullOrWhiteSpace(Model.URL))
        {
            <div class="row">
                <div class="col-2">URL:</div>
                <a class="col-10" href="@Model.URL" target="_blank">@Model.URL</a>
            </div>
        }
        <div class="row">
            <div class="col-2">Output Format:</div>
            <div class="col-10">@Model.OutputFormat.ToString()</div>
        </div>
        @if (Model.Tags != null && Model.Tags.Count > 0)
        {
            <div class="row">
                <div class="col-2">Tags:</div>
                <div class="col-10">@String.Join(", ", Model.Tags)</div>
            </div>
        }
    </div>
</div>

<form asp-action="Definition" method="post" role="form">
    <input type="hidden" asp-for="Name" />
    <div class="form-group">
        <div class="form-row">
            <a href="#parameters" class="col-12 font-weight-bold" data-toggle="collapse" role="button" aria-expanded="false" aria-controls="paraemters">Parameters</a>
        </div>
        <div class="card card-body show" id="parameters">
            <div class="form-row mb-1">
                <div class="col-2">
                    <span class="align-middle">Repeat</span>
                </div>
                <div class="col-5" data-toggle="tooltip" data-placement="top" title="The number of times to run the generator.">
                    <input class="form-control" asp-for="Repeat" step="1" min="1" max="50" />
                </div>
            </div>

            @if (Model.Parameters.Count > 0)
            {
                foreach (var parameter in Model.Parameters)
                {
                    <div class="form-row mb-1">
                        <div class="col-2">
                            <span class="align-middle">@parameter.Value.Display</span>
                        </div>
                        <div class="col-5" data-toggle="tooltip" data-html="true" data-placement="top" title="@parameter.Value.Description">
                            @switch (parameter.Value.Type)
                            {
                                case ParameterTypes.Text:
                                    <input class="form-control" asp-for="Parameters[parameter.Key].Value" />
                                    break;
                                case ParameterTypes.Integer:
                                    <input class="form-control" asp-for="Parameters[parameter.Key].Value" type="number" />
                                    break;
                                case ParameterTypes.Decimal:
                                    <input class="form-control col-5" asp-for="Parameters[parameter.Key].Value" type="number" />
                                    break;
                                case ParameterTypes.List:
                                    <select class="form-control col-5" asp-for="Parameters[parameter.Key].Value" asp-items="@(new SelectList(parameter.Value.Options, "Value", "Display"))"></select>
                                    break;
                                case ParameterTypes.Date:
                                    <input class="form-control col-5" asp-for="Parameters[parameter.Key].Value" type="date" />
                                    break;
                                case ParameterTypes.Boolean:
                                    <input class="form-check-input col-5" asp-for="Parameters[parameter.Key].Value" type="checkbox" data-toggle="toggle" data-on="Yes" data-off="No" />
                                    break;
                            }
                        </div>
                    </div>
                }
            }
        </div>
        <div class="form-row">
            <div class="col-12">
                <button id="btnGenerate" class="btn btn-primary float-right m-2" type="submit" asp-action="Definition">
                    Generate
                </button>
            </div>
        </div>
        @if (!String.IsNullOrEmpty(Model.Result))
        {
            <div class="font-weight-bold">Results</div>
            <div class="border p-2" style="overflow: auto; min-height: 200px;">
                @if (Model.OutputFormat == OutputFormats.Text)
                {
                    <pre class="col-12">@Model.Result</pre>
                }
                else
                {
                    @Html.Raw(Model.Result)
                }
            </div>
        }
        @if (!String.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="font-weight-bold text-danger">Error</div>
            <div class="border p-2 border-danger">
                <pre class="col-12">@Model.ErrorMessage</pre>
            </div>
        }
    </div>
</form>